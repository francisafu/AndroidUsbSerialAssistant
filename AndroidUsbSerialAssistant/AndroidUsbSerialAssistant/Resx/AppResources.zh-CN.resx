<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Baud Rate" xml:space="preserve">
    <value>波特率</value>
  </data>
  <data name="Chat" xml:space="preserve">
    <value>聊天</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>清除记录</value>
  </data>
  <data name="Data Bits" xml:space="preserve">
    <value>数据位</value>
  </data>
  <data name="Device Detached" xml:space="preserve">
    <value>设备已移除</value>
  </data>
  <data name="Favour" xml:space="preserve">
    <value>收藏</value>
  </data>
  <data name="FavourMessage" xml:space="preserve">
    <value>消息收藏</value>
  </data>
  <data name="Frequency" xml:space="preserve">
    <value>频    率</value>
  </data>
  <data name="Hex" xml:space="preserve">
    <value>Hex</value>
  </data>
  <data name="Known Device" xml:space="preserve">
    <value>设备已连接并可以使用</value>
  </data>
  <data name="No Device" xml:space="preserve">
    <value>未找到设备</value>
  </data>
  <data name="No Driver" xml:space="preserve">
    <value>未找到驱动程序</value>
  </data>
  <data name="No Permission" xml:space="preserve">
    <value>请允许此软件使用USB设备</value>
  </data>
  <data name="Open Failed" xml:space="preserve">
    <value>设备连接失败</value>
  </data>
  <data name="Parity" xml:space="preserve">
    <value>校验位</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>暂停</value>
  </data>
  <data name="Port Closed" xml:space="preserve">
    <value>端口已关闭</value>
  </data>
  <data name="Port Closed Error" xml:space="preserve">
    <value>端口关闭异常！</value>
  </data>
  <data name="Port Listening" xml:space="preserve">
    <value>端口侦听中...</value>
  </data>
  <data name="Received" xml:space="preserve">
    <value>接收</value>
  </data>
  <data name="Received Error" xml:space="preserve">
    <value>数据接收失败</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Save Failed" xml:space="preserve">
    <value>存储失败！</value>
  </data>
  <data name="Save Success" xml:space="preserve">
    <value>存储成功</value>
  </data>
  <data name="Send Error" xml:space="preserve">
    <value>发送失败</value>
  </data>
  <data name="Sent" xml:space="preserve">
    <value>发送</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="Start Auto Send" xml:space="preserve">
    <value>开始自动发送</value>
  </data>
  <data name="Stop Auto Send" xml:space="preserve">
    <value>结束自动发送</value>
  </data>
  <data name="Stop Bits" xml:space="preserve">
    <value>停止位</value>
  </data>
  <data name="Support Devices" xml:space="preserve">
    <value>支持设备</value>
  </data>
  <data name="Unknown Device" xml:space="preserve">
    <value>未识别的设备已连接</value>
  </data>
  <data name="Write Failed" xml:space="preserve">
    <value>写入数据失败！</value>
  </data>
</root>